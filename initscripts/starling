#!/bin/bash
#
# $HeadURL$
# $Id$
#
# Copyright (c) 2009-2010 by Public Library of Science, a non-profit corporation
# http://www.plos.org/
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Make sure the /var/run/starling, /var/log/starling and /var/spool/starling
# all exist and are owned by starling:starling
#
# starling    This shell script takes care of starting and stopping
#                    the starling server
# chkconfig: 345 98 98
# description: The starling queue server
# processname: starling
# pidfile: /var/run/starling/starling.pid
# logfile: /var/log/starling/starling.log

# Source function library.
. /etc/rc.d/init.d/functions

# Source networking configuration.
[ -f /etc/sysconfig/network ] && . /etc/sysconfig/network

DUSER=starling
DGROUP=starling
LOGFILE=/var/log/starling/starling.log
SPOOLDIR=/var/spool/starling
PORT=22122
LISTEN=0.0.0.0
PIDFILE=/var/run/starling/starling.pid

NAME=starling
if [ -d /opt/ree/current/bin ]; then
  # Use Ruby Enterprise Edition
  INSTALL_DIR=/opt/ree/current/bin
  PATH=$INSTALL_DIR:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
else
  # Use the machine's default 'ruby'
  INSTALL_DIR=/usr/bin
fi
DAEMON=$INSTALL_DIR/$NAME
OPTS="-h $LISTEN -p $PORT -d -q $SPOOLDIR -P $PIDFILE -L $LOGFILE -u $DUSER -g $DGROUP"

start() {
  echo -n $"Starting starling: "

  daemon $DAEMON $OPTS
  echo
}

stop() {
  echo -n $"Stopping starling: "

  killproc starling
  echo
}

case "$1" in
  start)
    start
  ;;
  stop)
    stop
  ;;
  restart)
    stop
    sleep 3
    start
  ;;
  status)
    status starling
  ;;
  *)
    echo $"Usage: $0 {start|stop|restart|status}"
    exit 1
esac
